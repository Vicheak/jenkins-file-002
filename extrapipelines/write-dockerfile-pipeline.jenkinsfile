pipeline {
    agent {
        docker {
            image 'node:21.7.1'
            args '-u root'
        }
    }

    environment {
        projectBranch = "main"
        imageTag = "${BUILD_NUMBER}"
        registryUser = "vicheak"
        registryCredentialId = "dockerhub"
    }

    stages {
        stage('Get Resource from Git'){ 
            steps{
                git branch: "${env.projectBranch}", url: 'https://github.com/Vicheak/reactjs-testing.git'
            }
        }

        stage('Build Project'){
            steps{
                script{
                    docker.image('node:21.7.1').inside{
                        sh '''
                            node -v
                            npm install --force
                            npm run build
                        '''
                    }
                }
            }
        }

        stage('Write Dockerfile'){
            steps{
                script{
                    def dockerFileContent = '''
                        # Stage 1: Build Stage
                        FROM node:18-alpine AS build-stage
                        WORKDIR /app
                        COPY package*.json ./
                        RUN npm install
                        COPY . ./
                        RUN npm run build

                        # Stage 2: Production Stage
                        FROM nginx:alpine AS production-stage
                        COPY --from=build-stage /app/build /usr/share/nginx/html
                        EXPOSE 80
                        CMD ["nginx", "-g", "daemon off;"]
                    '''

                    //write Dockerfile Content to a file inside workspace
                    writeFile file: 'Dockerfile', text: dockerFileContent
                }
            }
        }

        stage('Build Image and Push to Registry'){
            steps{
                script{
                    docker.withRegistry('', "${env.registryCredentialId}") {
                        def customImage = docker.build("${env.registryUser}/reactjs-app:${env.imageTag}")

                        customImage.push()
                    }
                }
            }
        }
    }
}