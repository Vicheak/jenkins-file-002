pipeline {
    agent any

    tools {
        // Ensure you have a 'gradle-8.7 or *' tool configuration in Jenkins Global Tool Configuration
        gradle 'gradle'
    }

    environment {
        registry = "vicheak"
        imageName = "spring-app"
        // Ensure that BUILD_NUMBER is correctly referenced
        tag = "${BUILD_NUMBER}"
    }

    stages {
        stage('Get Resource from Git') {
            steps {
                // Using the correct branch and repository URL
                git branch: 'main', url: 'https://github.com/Vicheak/working-with-multipart-file.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                // Build the Docker image with the dynamically assigned tag
                sh 'docker build -t ${registry}/${imageName}:${tag} .'
            }
        }

        // stage('Push Docker Image') {
        //     steps {
        //         script{
        //             withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
        //                 sh 'docker login -u $USER -p $PASS'
        //                 sh 'docker push ${registry}/${imageName}:${tag}'
        //                 sh 'docker rmi -f ${registry}/${imageName}:${tag}'
        //             }
        //         }
        //     }
        // }

        // stage('Deploy Spring Boot with Kubernetes') {
        //     steps {
        //         echo "================== Pull Git for install Playbook =================="
        //         git branch: 'main', url: 'https://gitlab.com/devops_gen_5/devops_shortcourse.git'
        //         echo "================== Run run deploy =================="
        //         script {
        //             sh '''ansible --version
        //             ansible -i ${WORKSPACE}/ansible/hosts all -m ping
        //             ansible-playbook -i ${WORKSPACE}/ansible/hosts ${WORKSPACE}/ansible/deployspringwithk8s.yaml \
        //             -e "registry=${registry} imageName=${imageName} tag=${tag}" 
        //             '''    
        //         }
        //     }
        // }
        
        // stage('Clean workspace') {
        //     steps {
        //         cleanWs()
        //     }
        // }
    }

    post {
        always {
            // Logout from Docker to ensure no credentials are left on the build agent
            sh 'docker logout'   
        }
        
        failure {
            // Additional actions in case of failure can be specified here
            echo 'The build failed.'
        }
    }
}
