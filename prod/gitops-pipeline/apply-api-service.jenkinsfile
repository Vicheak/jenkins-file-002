pipeline {
    agent any

    environment {
        ENV = "${env.GIT_BRANCH == 'origin/main' ? 'main' : 'dev'}"
        TELEGRAM_TOKEN = credentials('telegram-token')
    }

    stages {
        stage('Apply GitOps into Kubernetes Cluster') {
            steps {
                echo "================== Pull Git for install Playbook =================="
                git branch: 'main', url: 'https://github.com/Vicheak/ansible-config-001.git'
                echo "================== Run run deploy =================="
                script {
                    sh '''ansible --version
                    ansible -i ${WORKSPACE}/prod/hosts all -m ping
                    ansible-playbook -i ${WORKSPACE}/prod/hosts ${WORKSPACE}/prod/gitopos/apply-gitops.yaml
                    '''    
                }
            }
        }
        
        stage('Clean workspace') {
            steps {
                cleanWs()
            }
        }
    }

    post {
        always {
            script {
                try {
                    def COMMITER = sh (
                        script: 'git --no-pager show -s --format=\'%ae\'',
                        returnStdout: true
                    ).trim()
                    def EMOTE = currentBuild.result == 'SUCCESS' ? '✅' : '❌'
                    def DESC = currentBuild.result == 'SUCCESS' ? 'GitOps applyed into cluster successfully!' : 'GitOps applyed into cluster fail!'
                    def STATUS = "${currentBuild.result}${EMOTE}"
                    def MESSAGE = """
                    <b>Status : </b>${STATUS}
                    <b>Branch : </b>${env.GIT_BRANCH}
                    <b>Commiter : </b>${COMMITER}
                    <b>Commit ID : </b>${env.GIT_COMMIT}
                    <b>Environment : </b>${ENV}
                    <b>Build Url : </b> <a href=\"${BUILD_URL}\">view detail</a>
                    <b>Description : </b>${DESC}
                    """.stripIndent()

                    sh "curl -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage -d chat_id=${TELEGRAM_CHAT_ID} -d text='${MESSAGE}' -d parse_mode=HTML --max-time 30"
                } catch (Exception err) {
                    echo "${err}"
                }
            }
        }
    }

}